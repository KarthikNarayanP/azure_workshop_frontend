trigger:
- master
pool:
  vmImage: 'ubuntu-latest'
variables:
  backendPublicIP: $(publicIP)
  privateIP: 10.0.0.6
  region: South India
  bucket: Temp
steps:
- bash: |
    echo "Environmental Valued"
  env:
   backendIP: $(backendPublicIP)
   publicIP: $(backendPublicIP)
- task: NodeTool@0
  inputs:
    versionSpec: '12.x'
  displayName: 'Install Node.js'

- script: |
    echo "Environmental Value $(backendPublicIP)"
    npm install
  displayName: 'npm install'
- script: |
    curl -s --connect-timeout 8 -d "{\"privateIP\":\"$(privateIP)\",\"publicIP\":\"$(backendPublicIP)\",\"region\":\"$(region)\",\"bucket\":\"$(bucket)\"}"   -H 'Content-Type:application/json' http://$(backendPublicIP):3337/api/v1/aws_dashboard_report/secrets/update || true
    export backendIP=$(backendPublicIP)
    npm run scan
  displayName: 'Static Code Analysis'

- script: |
    export backendIP=$(backendPublicIP)
    npm test
    npm run scan
  displayName: 'Execute Unit Test'

- script: |
    docker build -t mythicalmysfits:latest .
  displayName: 'Build Docker Image'

- script: |
    docker login azureworkshopregistry.azurecr.io --username 00000000-0000-0000-0000-000000000000 --password $(azureACRToken)
    docker tag mythicalmysfits azureworkshopregistry.azurecr.io/mythicalmysfits
    docker push azureworkshopregistry.azurecr.io/mythicalmysfits
  displayName: 'Push Docker Image to ACR'

- task: PublishTestResults@2
  condition: succeededOrFailed()
  inputs:
    testRunner: JUnit
    testResultsFiles: 'test/results/junit.xml'
    buildConfiguration: 
- task: PublishCodeCoverageResults@1
  inputs: 
    codeCoverageTool: Cobertura
    summaryFileLocation: '$(System.DefaultWorkingDirectory)/test/results/coverage/clover.xml'
    reportDirectory: '$(System.DefaultWorkingDirectory)/test/results/coverage'